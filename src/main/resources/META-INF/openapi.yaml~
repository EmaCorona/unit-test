openapi: 3.0.1
info:
  title: Pokemon Controller
  description: Pokemon Api Definition
  version: v1
paths:
  /pokemon/create-pokemon:
    post:
      summary: Create Pokemon
      operationId: createPokemon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePokemonRequestDTO'
        required: true
      responses:
        '201':
          description: Pokemon successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDTO'
        '400':
          description: Invalid request
          content:
            '*/*':
              schema:
                type: string
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                type: string
  /pokemon/update-pokemon:
    put:
      summary: Update Pokemon
      operationId: updatePokemon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePokemonRequestDTO'
        required: true
      responses:
        '200':
          description: Pokemon successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDTO'
        '400':
          description: Invalid request
          content:
            '*/*':
              schema:
                type: string
        '404':
          description: Pokemon not found
          content:
            '*/*':
              schema:
                type: string
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                type: string
  /pokemon/delete-pokemon:
    delete:
      summary: Delete Pokemon
      operationId: deletePokemon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletePokemonRequestDTO'
        required: true
      responses:
        '200':
          description: Pokemon successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDTO'
        '404':
          description: Pokemon not found
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: Invalid request
          content:
            '*/*':
              schema:
                type: string
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                type: string
  /pokemon/find-all-pokemons:
    get:
      summary: Find All Pokemons
      operationId: findAllPokemon
      responses:
        '200':
          description: Pokemon successfully found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PokemonDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                type: string
  /pokemon/find-pokemon-by-id/{pokemonId}:
    get:
      summary: Find Pokemon By Id
      operationId: findPokemonById
      parameters:
        - name: pokemonId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Pokemon successfully found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PokemonDTO'
        '400':
          description: Invalid request
          content:
            '*/*':
              schema:
                type: string
        '404':
          description: Pokemon not found
          content:
            '*/*':
              schema:
                type: string
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    CreatePokemonRequestDTO:
      type: object
      properties:
        pokedexId:
          type: integer
          format: int64
        pokemonName:
          type: string
        pokemonType:
          type: string
    UpdatePokemonRequestDTO:
      type: object
      properties:
        pokemonId:
          type: integer
          format: int64
        pokedexId:
          type: integer
          format: int64
        pokemonName:
          type: string
        pokemonType:
          type: string
    DeletePokemonRequestDTO:
      type: object
      properties:
        pokemonId:
          type: integer
          format: int64
        pokemonName:
          type: string
    ResponseDTO:
      type: object
      properties:
        PokemonDTO:
          $ref: '#/components/schemas/PokemonDTO'
        httpStatusCode:
          type: integer
        error:
          type: string
    PokemonDTO:
      type: object
      properties:
        pokemonId:
          type: integer
          format: int64
        pokedexId:
          type: integer
          format: int64
        name:
          type: string
        type:
          type: string